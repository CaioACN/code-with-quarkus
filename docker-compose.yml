services:
  postgres:
    image: postgres:15
    container_name: quarkus_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-quarkus-social}
      # opcional: garante caminho consistente dentro do volume
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "6543:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-quarkus-social}"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - sistema-pontos-network

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile           # <-- mova o Dockerfile para apps/backend/
    image: code-with-quarkus:local
    container_name: sistema-pontos-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      QUARKUS_PROFILE: docker
      QUARKUS_DATASOURCE_DB_KIND: postgresql
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/quarkus-social
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: none
      QUARKUS_FLYWAY_MIGRATE_AT_START: "true"
    ports:
      - "8080:8080"
    networks:
      - sistema-pontos-network
    # healthcheck:
      # wget não está disponível na imagem UBI8
      # test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/q/health || exit 1"]
      # interval: 30s
      # timeout: 10s
      # retries: 5
      # start_period: 40s

  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    image: sistema-pontos-frontend:local
    container_name: sistema-pontos-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "4200:80"
    networks:
      - sistema-pontos-network
    healthcheck:
      # Se for nginx:alpine, não vem com curl por padrão. Instale ou use esta checagem só se tiver curl.
      test: ["CMD-SHELL", "curl -fsS http://localhost/ > /dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

networks:
  sistema-pontos-network:
    driver: bridge

volumes:
  pgdata:
